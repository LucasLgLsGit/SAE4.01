{% extends '_template/base.html.twig' %}

{% block css %}
<link rel="stylesheet" href="/assets/css/newsAdmin.css">
{% endblock %}

{% block body %}
<div class="news-container">
	<div class="container mt-5">
		<div class="d-flex align-items-center mb-4">
			<h2 class="fw-bold">Gestion des actualités</h2>
			<button class="add-news-button ms-3" data-bs-toggle="modal" data-bs-target="#createNewsModal" onclick="document.getElementById('createNewsForm').reset();">Ajouter une actualité<i class="bi-create-news bi bi-plus-square"></i></button>
		</div>
		<div class="mb-3 d-flex gap-2">
			<select class="form-select w-25" id="searchAttribute">
				<option value="id">ID</option>
				<option value="titre">Titre</option>
				<option value="contenu">Contenu</option>
				<option value="date">Date de publication</option>
				<option value="auteur">Auteur (ID)</option>
			</select>
			<input type="text" class="form-control" id="searchInput" placeholder="Rechercher...">
			<button type="button" class="btn btn-research" id="resetSearch"><i class="bi bi-arrow-clockwise"></i></button>
		</div>
		<table class="table table-striped">
			<thead>
				<tr>
					<th class="sortable" data-column="id">ID<i class="bi bi-sort-up"></i></th>
					<th class="sortable" data-column="titre">Titre<i class="bi bi-sort-up"></i></th>
					<th class="sortable" data-column="contenu">Contenu<i class="bi bi-sort-up"></i></th>
					<th class="sortable" data-column="date">Date de publication<i class="bi bi-sort-up"></i></th>
					<th class="sortable" data-column="auteur">Auteur (ID)<i class="bi bi-sort-up"></i></th>
					<th>Actions</th>
				</tr>
			</thead>
			<tbody>
				{% for new in news %}
				<tr>
					<td>{{ new.getIdArticle() }}</td>
					<td>{{ new.getTitreArticle() }}</td>
					<td class="ellipsis-td">{{ new.getContenu() }}</td>
					<td>{{ new.getDatePublication().format('d/m/Y H:i') }}</td>
					<td>{{ new.getIdUser() }}</td>
					<td>
						<a href="#" 
							class="btn btn-modifier btn-sm edit-news" 
							data-bs-toggle="modal" 
							data-bs-target="#editNewsModal" 
							data-new-id="{{ new.getIdArticle() }}" 
							data-new-title="{{ new.getTitreArticle() }}" 
							data-new-content="{{ new.getContenu() }}" 
							onclick="
								document.getElementById('editNewsId').value = '{{ new.getIdArticle() }}';
								document.getElementById('editNewsTitle').value = '{{ new.getTitreArticle() }}';
								document.getElementById('editNewsContent').value = '{{ new.getContenu() }}';
							">
							<i class="bi bi-pencil-square"></i>
						</a>
						<button class="btn btn-supprimer btn-sm delete-new mt-1" data-bs-toggle="modal" data-bs-target="#deleteNewsModal" data-new-id="{{ new.getIdArticle() }}" onclick="document.getElementById('deleteNewsId').value = '{{ new.getIdArticle() }}';">
							<i class="bi bi-trash"></i>
						</button>
					</td>
				</tr>
				{% endfor %}
			</tbody>
		</table>
	</div>
</div>

<div class="modal fade" id="editNewsModal" tabindex="-1" aria-labelledby="editNewsModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editNewsModalLabel">Modifier l'actualité</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="editNewsForm" action="news_update.php" method="POST">
					<input type="hidden" id="editNewsId" name="id_article">
					<div class="mb-3">
						<label for="editNewsTitle" class="form-label">Titre</label>
						<input type="text" class="form-control" id="editNewsTitle" name="titre" required>
					</div>
					<div class="mb-3">
						<label for="editNewsContent" class="form-label">Contenu</label>
						<textarea class="form-control" id="editNewsContent" name="contenu" rows="5" required></textarea>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
				<button type="submit" class="btn btn-primary" form="editNewsForm">Enregistrer</button>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="deleteNewsModal" tabindex="-1" aria-labelledby="deleteNewsModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<form action="news_delete.php" method="POST">
				<div class="modal-header">
					<h5 class="modal-title" id="deleteNewsModalLabel">Confirmer la suppression</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					Êtes-vous sûr de vouloir supprimer cette actualité ?
					<input type="hidden" name="id_article" id="deleteNewsId">
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
					<button type="submit" class="btn btn-danger">Supprimer</button>
				</div>
			</form>
		</div>
	</div>
</div>

<div class="modal fade" id="createNewsModal" tabindex="-1" aria-labelledby="createNewsModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="createNewsModalLabel">Créer une nouvelle actualité</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="createNewsForm" action="news_create.php" method="POST">
					<input type="hidden" id="createNewsUserId" name="id_user" value="{{ utilisateur.getId()}}">
					<div class="mb-3">
						<label for="createNewsTitle" class="form-label">Titre</label>
						<input type="text" class="form-control" id="createNewsTitle" name="titre_article" required>
					</div>
					<div class="mb-3">
						<label for="createNewsContent" class="form-label">Contenu</label>
						<textarea class="form-control" id="createNewsContent" name="contenu" rows="5" required></textarea>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
				<button type="submit" class="btn btn-primary" form="createNewsForm">Créer</button>
			</div>
		</div>
	</div>
</div>
{% endblock %}

{% block javascript %}
<script>
	document.addEventListener('DOMContentLoaded', function () 
	{
		let sortOrder = {
			id: 1,
			titre: 1,
			contenu: 1,
			date: 1,
			auteur: 1
		};
	
		function sortTableByColumn(columnName, type) {
			const rows = Array.from(document.querySelectorAll('table tbody tr'));
			const columnIndices = {
				id: 0,
				titre: 1,
				contenu: 2,
				date: 3,
				auteur: 4
			};
	
			const columnIndex = columnIndices[columnName];
	
			const sortedRows = rows.sort((a, b) => {
				const cellA = a.cells[columnIndex];
				const cellB = b.cells[columnIndex];
	
				if (!cellA || !cellB) {
					return 0; // Ignore les lignes qui n'ont pas la cellule correspondante
				}
	
				const valueA = cellA.textContent.trim();
				const valueB = cellB.textContent.trim();
	
				let comparison = 0;
				if (type === 'number') {
					comparison = parseFloat(valueA.replace(',', '.')) - parseFloat(valueB.replace(',', '.'));
				} else if (type === 'date') {
					comparison = new Date(valueA) - new Date(valueB);
				} else {
					comparison = valueA.localeCompare(valueB);
				}
	
				return comparison * sortOrder[columnName];
			});
	
			const tbody = document.querySelector('table tbody');
			tbody.innerHTML = '';
			tbody.append(...sortedRows);
		}
	
		function setupSortableColumns() {
			const headers = document.querySelectorAll('.sortable');
			headers.forEach(header => {
				header.addEventListener('click', function () {
					const columnName = header.getAttribute('data-column');
					const type = columnName === 'id' || columnName === 'auteur' ? 'number' : 
								 columnName === 'date' ? 'date' : 'string';
					sortOrder[columnName] = sortOrder[columnName] * -1;
					sortTableByColumn(columnName, type);
				});
			});
		}

		function setupSearch() {
			const searchInput = document.getElementById('searchInput');
			const searchAttribute = document.getElementById('searchAttribute');
			const resetButton = document.getElementById('resetSearch');
			const rows = document.querySelectorAll('.table tbody tr');

			function filterRows() {
				const searchTerm = searchInput.value.trim().toLowerCase();
				const attribute = searchAttribute.value;

				// Mappe les attributs aux indices des colonnes
				const columnIndices = {
					'id': 0,      // ID
					'titre': 1,   // Titre
					'contenu': 2, // Contenu
					'date': 3,    // Date de publication
					'auteur': 4   // Auteur (ID)
				};

				const columnIndex = columnIndices[attribute];

				rows.forEach(row => {
					const cell = row.querySelector(`td:nth-child(${columnIndex + 1})`);
					let cellText = cell.textContent.trim().toLowerCase();

					// Gestion spéciale pour la date (format d/m/Y H:i)
					if (attribute === 'date') {
						cellText = cellText.replace(/\//g, ''); // Supprime les slashes pour faciliter la recherche
					}

					if (cellText.includes(searchTerm)) {
						row.style.display = '';
					} else {
						row.style.display = 'none';
					}
				});
			}

			function resetSearch() {
				searchInput.value = '';
				searchAttribute.value = 'titre'; // Réinitialise à "Titre"
				rows.forEach(row => {
					row.style.display = ''; // Affiche toutes les lignes
				});
			}

			// Mise à jour du placeholder
			function updatePlaceholder() {
				const placeholders = {
					'id': 'Rechercher par ID...',
					'titre': 'Rechercher par titre...',
					'contenu': 'Rechercher par contenu...',
					'date': 'Rechercher par date (ex. 02042025)...',
					'auteur': 'Rechercher par auteur (ID)...'
				};
				searchInput.placeholder = placeholders[searchAttribute.value];
			}

			searchInput.addEventListener('input', filterRows);
			searchAttribute.addEventListener('change', function () {
				updatePlaceholder();
				filterRows();
			});
			resetButton.addEventListener('click', resetSearch);

			// Initialise le placeholder
			updatePlaceholder();
		}
		setupSearch();
		setupSortableColumns();
	});
</script>
{% endblock %}