{% extends '_template/base.html.twig' %}

{% block css %}
<link rel="stylesheet" href="/assets/css/usersAdmin.css">
{% endblock %}

{% block body %}
<div class="users-container">
	<div class="container mt-5">
		<h2 class="mb-4 fw-bold">Gestion des utilisateurs</h2>
		<div class="mb-3 d-flex gap-2">
            <select class="form-select w-25" id="searchAttribute">
                <option value="nom">Nom</option>
                <option value="prenom">Prénom</option>
                <option value="email">Email</option>
                <option value="id">ID</option>
            </select>
            <input type="text" class="form-control" id="searchInput" placeholder="Rechercher...">
			<button type="button" class="btn btn-research" id="resetSearch"><i class="bi bi-arrow-clockwise"></i></button>
        </div>
		<table class="table table-striped">
			<thead>
				<tr>
					<th>ID</th>
					<th>Nom</th>
					<th>Prénom</th>
					<th>Email</th>
					<th>Admin</th>
					<th>Adhérent</th>
					<th>Actions</th>
				</tr>
			</thead>
			<tbody>
				{% for user in users %}
				<tr>
					<td>{{ user.getId() }}</td>
					<td>{{ user.getNom() }}</td>
					<td>{{ user.getPrenom() }}</td>
					<td>{{ user.getMail() }}</td>
					<td>
						<input type="checkbox" class="toggle-perm" data-user-id="{{ user.getId() }}" data-perm="admin" {% if user.isAdmin() %}checked{% endif %}>
					</td>
					<td>
						<input type="checkbox" class="toggle-perm" data-user-id="{{ user.getId() }}" data-perm="adherent" {% if user.isAdherent() %}checked{% endif %}>
					</td>
					<td>
						<a href="#" class="btn btn-modifier btn-sm edit-user" data-bs-toggle="modal" data-bs-target="#editUserModal" data-user-id="{{ user.getId() }}" data-user-nom="{{ user.getNom() }}" data-user-prenom="{{ user.getPrenom() }}" data-user-mail="{{ user.getMail() }}" onclick="
							document.getElementById('editUserId').value = '{{ user.getId() }}';
							document.getElementById('editUserNom').value = '{{ user.getNom() }}';
							document.getElementById('editUserPrenom').value = '{{ user.getPrenom() }}';
							document.getElementById('editUserMail').value = '{{ user.getMail() }}';
						">
							<i class="bi bi-pencil-square"></i>
						</a>
						<button class="btn btn-supprimer btn-sm delete-user" data-bs-toggle="modal" data-bs-target="#deleteUserModal" data-user-id="{{ user.getId() }}" onclick="document.getElementById('deleteUserId').value = '{{ user.getId() }}';"><i class="bi bi-trash"></i></button>
					</td>
				</tr>
				{% endfor %}
			</tbody>
		</table>
	</div>
</div>

<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<form action="user_delete.php" method="POST">
				<div class="modal-header">
					<h5 class="modal-title" id="deleteUserModalLabel">Confirmer la suppression</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					Êtes-vous sûr de vouloir supprimer cet utilisateur ?
					<input type="hidden" name="id_user" id="deleteUserId">
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
					<button type="submit" class="btn btn-danger">Supprimer</button>
				</div>
			</form>
		</div>
	</div>
</div>

<div class="modal fade" id="confirmPermissionModal" tabindex="-1" aria-labelledby="confirmPermissionModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="confirmPermissionModalLabel">Confirmer la modification</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Êtes-vous sûr de vouloir modifier les permissions de cet utilisateur ?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
				<button type="button" class="btn btn-primary" id="confirmPermissionChange">Confirmer</button>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editUserModalLabel">Modifier l'utilisateur</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="editUserForm" action="user_update.php" method="POST">
					<input type="hidden" id="editUserId" name="id_user">
					<div class="mb-3">
						<label for="editUserNom" class="form-label">Nom</label>
						<input type="text" class="form-control" id="editUserNom" name="nom" required>
					</div>
					<div class="mb-3">
						<label for="editUserPrenom" class="form-label">Prénom</label>
						<input type="text" class="form-control" id="editUserPrenom" name="prenom" required>
					</div>
					<div class="mb-3">
						<label for="editUserMail" class="form-label">Email</label>
						<input type="email" class="form-control" id="editUserMail" name="mail" required>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
				<button type="submit" class="btn btn-primary" form="editUserForm">Enregistrer</button>
			</div>
		</div>
	</div>
</div>
{% endblock %}

{% block javascript %}
<script>
	document.addEventListener('DOMContentLoaded', function () {
		function setupTogglePermissions() {
			const togglePermCheckboxes = document.querySelectorAll('.toggle-perm');
			const confirmPermissionChangeButton = document.getElementById('confirmPermissionChange');

			togglePermCheckboxes.forEach(checkbox => {
				checkbox.addEventListener('change', function () {
					const userId = this.getAttribute('data-user-id');
					const permissionType = this.getAttribute('data-perm');
					const isChecked = this.checked;

					pendingPermissionChange = {
						userId,
						permissionType,
						isChecked,
						checkboxElement: this,
					};

					confirmPermissionModal.show();
				});
			});

			confirmPermissionChangeButton.addEventListener('click', function () {
				if (pendingPermissionChange) {
					const { userId, permissionType, isChecked } = pendingPermissionChange;

					fetch('/user_update_permission.php', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/x-www-form-urlencoded',
						},
						body: `id_user=${userId}&permission=${permissionType}&value=${isChecked ? 1 : 0}`,
					})
					.then(response => {
						if (!response.ok) {
							throw new Error('Erreur réseau');
						}
						return response.json();
					})
					.then(data => {
						if (!data.success) {
							console.error(data.message || 'Une erreur est survenue.');
						}
					})
					.catch(error => {
						console.error('Erreur:', error);
					})
					.finally(() => {
						pendingPermissionChange = null;
						confirmPermissionModal.hide();
					});
				}
			});

			confirmPermissionModal._element.addEventListener('hidden.bs.modal', function () {
				if (pendingPermissionChange) {
					pendingPermissionChange.checkboxElement.checked = !pendingPermissionChange.isChecked;
					pendingPermissionChange = null;
				}
			});
		}
		
		function setupSearch() {
            const searchInput = document.getElementById('searchInput');
            const searchAttribute = document.getElementById('searchAttribute');
			const resetButton = document.getElementById('resetSearch');
            const rows = document.querySelectorAll('.table tbody tr');

            function filterRows() {
                const searchTerm = searchInput.value.trim().toLowerCase();
                const attribute = searchAttribute.value;

                const columnIndices = {
                    'id': 0,    
                    'nom': 1,  
                    'prenom': 2,  
                    'email': 3   
                };

                const columnIndex = columnIndices[attribute];

                rows.forEach(row => {
                    const cell = row.querySelector(`td:nth-child(${columnIndex + 1})`); // +1 car nth-child commence à 1
                    const cellText = cell.textContent.trim().toLowerCase();

                    if (cellText.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

			function resetSearch() {
				searchInput.value = '';
				searchAttribute.value = 'nom'; // Réinitialise l'attribut de recherche à "Nom"
				rows.forEach(row => {
					row.style.display = ''; // Affiche toutes les lignes
				});
			}

            searchInput.addEventListener('input', filterRows);
            searchAttribute.addEventListener('change', filterRows);
			resetButton.addEventListener('click', resetSearch);
        }

		setupDeleteUser();
		setupEditUser();
		setupTogglePermissions();
		setupSearch();
	});
</script>
{% endblock %}