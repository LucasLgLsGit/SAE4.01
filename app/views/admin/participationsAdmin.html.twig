{% extends '_template/base.html.twig' %}

{% block css %}
	<link rel="stylesheet" href="/assets/css/participationAdmin.css">
{% endblock %}

{% block body %}
<div class="container-participations">
	<div class="container mt-5">
		<h2 class="mb-4 fw-bold">Gestion des participations</h2>

		<div class="table-responsive">
			<table class="table table-striped">
				<thead>
					<tr>
						<th class="sortable" data-column="id_user">ID Utilisateur <i class="bi bi-sort-up"></i></th>
						<th class="sortable" data-column="event_titre">Nom de l'Événement <i class="bi bi-sort-up"></i></th>
						<th class="sortable" data-column="user_nom">Utilisateur <i class="bi bi-sort-up"></i></th>
						<th class="sortable" data-column="date_participation">Date de Participation <i class="bi bi-sort-up"></i></th>
					</tr>
				</thead>
				<tbody>
					{% for participation in participations %}
					<tr>
						<td>{{ participation.id_user }}</td>
						<td>{{ participation.event_titre }}</td>
						<td>{{ participation.user_nom }} {{ participation.user_prenom }}</td>
						<td>{{ participation.date_participation|date('d/m/Y H:i') }}</td>
					</tr>
					{% else %}
					<tr>
						<td colspan="4" class="text-center">Aucune participation trouvée.</td>
					</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
	</div>
</div>
{% endblock %}

{% block javascript %}
<script>

	document.addEventListener('DOMContentLoaded', function () {
		const rows = document.querySelectorAll('.table tbody tr');
		const sortableHeaders = document.querySelectorAll('.sortable');

		function sortTableByColumn(columnIndex, ascending) {
			const tbody = document.querySelector('.table tbody');
			const rowsArray = Array.from(rows);

			rowsArray.sort((a, b) => {
				const aText = a.querySelectorAll('td')[columnIndex].textContent.trim().toLowerCase();
				const bText = b.querySelectorAll('td')[columnIndex].textContent.trim().toLowerCase();

				if (!isNaN(aText) && !isNaN(bText)) {
					return ascending ? aText - bText : bText - aText;
				} else {
					return ascending ? aText.localeCompare(bText) : bText.localeCompare(aText);
				}
			});

			rowsArray.forEach(row => tbody.appendChild(row));
		}

		sortableHeaders.forEach((header, index) => {
			let ascending = true;
			header.addEventListener('click', () => {
				sortTableByColumn(index, ascending);
				ascending = !ascending;
			});
		});
	});
</script>
{% endblock %}